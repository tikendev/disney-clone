---
import 'swiper/css';
import 'swiper/css/navigation';
import { uuid } from 'uuidv4';


interface Props {
    title: string;
    fetchData: any[];
}

const { title, fetchData } = Astro.props;
const disneyContent = await fetchData;
const swiperID = uuid();
const imgURL = 'https://image.tmdb.org/t/p/w500';
---

<div class="collection">
    <h4 class="collection-title">{ title }</h4>
    <div class={`movie-carousel content-swiper swiper-${swiperID}`} data-swiper-id={swiperID}>
        <ul class="movie-carousel-list swiper-wrapper">
            {
                disneyContent
                    .filter( content => content.poster_path)
                    .map( content => (
                        <a href="/search" class="movie-carousel-item swiper-slide" data-banner="item">
                            <img 
                                src={`${imgURL}${content.poster_path}`} 
                                class="movie-carousel-cover"
                                alt={ content.title || content.name } 
                            >
                        </a>
                    ))
            }
        </ul>
        <div class={`content-button-prev-${swiperID} swiper-button-prev`}></div>
        <div class={`content-button-next-${swiperID} swiper-button-next`}></div>
    </div>
</div>


<style>
.collection {
    margin-inline-start: 1.5rem;

    @media (min-width: 768px) {
        margin-inline-start: 3rem;
    }

    @media (min-width: 1024px) {
        margin-inline-start: 4rem;
        margin-block-start: 2rem;   
    }
    
    @media (min-width: 1920px) {
        margin-inline-start: 4.2rem;
    }
}

.content-swiper {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    position: relative;
    height: 100%;
    width: 100%;
    padding-block-end: 2rem;
}

.collection-title {
    font-size: .875rem;
    font-weight: normal;
    line-height: 28px;
    color: var(--mobile-title);
    margin-block-end: .25rem;
    letter-spacing: .1rem;
    position: relative;

    @media (min-width: 768px) {
        font-size: 1.25rem;
        line-height: 28px;
        margin-block: .5rem;
    }

    @media (min-width: 1024px) {
        color: var(--profile-menu-text);
        margin-block-start: 1.375rem;
        letter-spacing: .11px;
        line-height: 1.4;
        margin-block-end: 1rem;
    }

    @media (min-width: 2560px) {
        margin-block-end: 1.5rem;
    }


}

.movie-carousel-list {
    justify-content: center;
    display: flex;
    justify-content: flex-start;
}

.movie-carousel-item {
    position: relative;
    height: auto;
    transition: transform 200ms cubic-bezier(0.55, 0.085, 0.68, 0.53) 0s;
    cursor: pointer;
    user-select: none;
    flex-shrink: 0;
    width: 100%;
    height: 180px;
    background-color: transparent;

    &:after {
        inset: 0px;
        content: "";
        position: absolute;
        border-radius: 4px;
        outline-offset: 4px;
        transition: background-color 500ms cubic-bezier(0.55, 0.085, 0.68, 0.53) 0s;
    }

    &.inactive::after {
        background-color: rgba(0, 0, 0, .6);
    }

    @media (min-width: 1024px) {
        max-width: 210px;

        &:hover {
            box-shadow: rgb(0 0 0 / 80%) 0px 40px 58px -16px, rgb(0 0 0 / 72%) 0px 30px 22px -10px;
            transform: scale(1.05);
        }

        &.inactive:hover {
            box-shadow: rgb(0 0 0 / 80%) 0px 40px 58px -16px, rgb(0 0 0 / 72%) 0px 30px 22px -10px;
            transform: unset;
        }

        &:hover::after {
            outline: 3px solid #fff;
        }

        &:hover.inactive::after {
            outline: unset;
        }
    }
    
    @media (min-width: 1440px) {
        max-width: 400px;
        height: 100%;
    }
    
    @media (min-width: 1920px) {
        max-width: 350px;
    }

    @media (min-width: 2560px) {
        max-width: 580px;
    }
}

.movie-carousel-item.inactive {
    pointer-events: none;
    cursor: pointer;
}

.movie-carousel-list.swiper-wrapper {
    display: flex;
    transition-property: transform;
    box-sizing: content-box;
}

.movie-carousel-cover {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: top;
    border-radius: 4px;
    box-shadow: rgba(0 0 0 / 69%) 0px 26px 30px -10px, rgba(0 0 0 / 73%) 0px 16px 10px -10px;
}

{/* .movie-carousel-item:last-child {
    margin-inline-end: 514rem;
} */}

.swiper-button-prev,
.swiper-button-next {
    display: none;
}

@media (min-width: 1024px) {
    .swiper-button-prev,
    .swiper-button-next {
        display: flex;
    }
}

.swiper-button-next,
.swiper-button-prev {
    color: var(--white);
    width: 40px;
    height: 40px;
    transition: opacity 400ms ease-out;
}

@media (min-width: 1024px) {
    .swiper-button-next,
    .swiper-button-prev {
        opacity: 0;
    }

    .swiper-button-next:hover,
    .swiper-button-prev:hover {
        opacity: 1;
    } 
}


.swiper-button-prev.visible,
.swiper-button-next.visible {
    opacity: 1;
}

.swiper-button-prev:after, 
.swiper-button-next:after {
    display: none;
    flex-direction: column;
    justify-content: center;
    font-size: 1.75rem;    
}

@media (min-width: 1200px) {
    .swiper-button-prev:after, 
    .swiper-button-next:after {
        display: flex;
        border: 20px solid transparent;
        height: 50vh;
        position: relative;
        top: -20px
    }

    .swiper-button-prev:after {
        left: -10px;
    }

    .swiper-button-next:after {
        right: -10px;
    }
}

@media (min-width: 1440px) {

    .swiper-button-prev:after {
        left: -75px;
    }
    
    .swiper-button-next:after {
        right: -5px;
    }
}

@media (min-width: 1920px) {
    .swiper-button-prev:after, 
    .swiper-button-next:after {
        border: 40px solid transparent;
        height: 70vh;
    }

    .swiper-button-prev:after {
        left: -75px;
    }

    .swiper-button-next:after {
        right: -5px;
    }
}

@media (min-width: 2560px) {
    .swiper-button-prev:after, 
    .swiper-button-next:after {
        border: 80px solid transparent;
        height: 70vh;
    }

    .swiper-button-prev:after {
        left: -75px;
    }

    .swiper-button-next:after {
        right: 32px;
    }
}

</style>

<script>
import Swiper from 'swiper';
import { Navigation } from 'swiper/modules';
import { initHandleActiveCollection, handleActiveCollection, changeButtonOpacity } from '@helpers/collection';
import { activeArrowOpacity } from '@helpers/slider';

window.addEventListener('DOMContentLoaded', () => {

    const swiperElement = document.querySelector('.content-swiper') as HTMLElement;
    const swiperID = swiperElement.getAttribute('data-swiper-id');

    activeArrowOpacity(`content-button-prev-${swiperID}`, `content-button-next-${swiperID}`);

    const collectionSwiper = new Swiper(`.swiper-${swiperID}`, {
        loop: false,
        slidesPerView: 'auto',
        centeredSlides: false,
        spaceBetween: 10,
        navigation: {
            nextEl: `.content-button-next-${swiperID}`,
            prevEl: `.content-button-prev-${swiperID}`,
        },
        allowTouchMove: true,
        speed: 800,
        modules: [Navigation],

        on: {
            init: () => {
                initHandleActiveCollection(5);
            },
    
            slideChangeTransitionEnd: () => {
                const activeSlider = collectionSwiper.activeIndex;

                if (activeSlider > 20)
                    changeButtonOpacity(`content-button-next-${swiperID}`);
                else if (activeSlider === 0)
                    changeButtonOpacity(`content-button-prev-${swiperID}`);

                handleActiveCollection(collectionSwiper);                
            }
        },
        breakpoints: {
            0: {
                slidesPerView: 3,
                allowTouchMove: true,
            },
            768: {
                slidesPerView: 2,
                allowTouchMove: true,
            },
            1024: {
                slidesPerView: 'auto',
                allowTouchMove: false,
                slidesPerGroupAuto: true,
                spaceBetween: 20,
            },
            1440: {
                slidesPerView: 5.5,
                slidesPerGroup: 5,
                spaceBetween: 20,

            },
            1920: {
                slidesPerView: 5.25,
                slidesPerGroup: 5,
                spaceBetween: 20,
            },
            2560: {
                slidesPerView: 5.25,
                slidesPerGroup: 5,
                spaceBetween: 25,
            }
        }
    });
});
</script>